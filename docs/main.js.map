{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,MAAM,YAAY;IACvB,YACS,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;IACzB,CAAC;;wEAHM,YAAY;0GAAZ,YAAY;QCVzB,6EAC+D;QAG1B,kEAAO;QAAA,4DAAS;QAEjD,6EAA+B;QAC3B,2EAA+B;QACnC,4DAAU;;QAPL,kHAAqD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAJ;AACqB;AAClC;AACE;AACI;AACJ;AAO7B;;;;;;;;;;AAmBX,MAAM,SAAS;;kEAAT,SAAS;uGAAT,SAAS,cAFR,wDAAY;2GAPtB,qEAAa;QACb,0FAAuB;QACvB,wDAAW;QACX,4DAAc;QACd,kEAAoB,CAAC,2CAAM,CAAC;oIAKnB,SAAS,mBAflB,wDAAY,wkBAMZ,qEAAa;QACb,0FAAuB;QACvB,wDAAW;QACX,4DAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBX,MAAM,eAAe;IAJ5B;QAKa,UAAK,GAAG,SAAS,CAAC;QAClB,WAAM,GAAG,2BAA2B,CAAC;QACrC,eAAU,GAAG,GAAG,CAAC;QACjB,aAAQ,GAAG,MAAM,CAAC;KAC9B;;8EALY,eAAe;6GAAf,eAAe;;QCT5B,iFAA4C;QAER,uDAAU;QAAA,4DAAO;QACjD,qEAAoB;QAEpB,4EACwC;QAC1B,uDAAY;QAAA,4DAAW;QAErC,oFAA+B;QAC3B,8DAAyB;QAC7B,4DAAW;;;QATL,0DAAyB;QAAzB,sFAAyB;QAAC,0DAAU;QAAV,2EAAU;QAIlC,0DAA+B;QAA/B,kFAA+B;QACzB,0DAAY;QAAZ,6EAAY;;;;;;;;;;;;;;;;;;ACEvB,MAAM,sBAAsB;IAJnC;QAKa,SAAI,GAAW,qCAAqC,CAAC;QACrD,WAAM,GAAW,SAAS,CAAC;KACvC;;4FAHY,sBAAsB;oHAAtB,sBAAsB;QCTnC,uEAEiB;QAAA,uDAAU;QAAA,4DAAI;;QAA5B,uIAAa;QAAC,0DAAU;QAAV,2EAAU;;;;;;;;;;;;;;;;;;;;;;ACOpB,MAAM,oBAAoB;IAJjC;QAKa,UAAK,GAAW,SAAS,CAAC;QAC1B,SAAI,GAAW,GAAG,CAAC;QACnB,UAAK,GAAW,GAAG,CAAC;QACpB,WAAM,GAAW,EAAE,CAAC;QACpB,UAAK,GAAW,2EAA2E,CAAC;KACxG;;wFANY,oBAAoB;kHAApB,oBAAoB;QCTjC,6EAK6B;QACM,uDAAS;QAAA,4DAAI;;QAJvC,mEAAe;QACf,mFAAwB;QAExB,gFAAmB;QACO,0DAAS;QAAT,0EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKrC,MAAM,oBAAoB;IAM7B,YACW,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;QANtB,eAAU,GAAW,aAAa,CAAC;QACnC,cAAS,GAAW,cAAc,CAAC;QACnC,cAAS,GAAW,YAAY,CAAC;QACjC,aAAQ,GAAW,cAAc,CAAC;IAIvC,CAAC;;wFARI,oBAAoB;kHAApB,oBAAoB;QCXjC,4EAEuC;QAA/B,4IAAS,wBAAoB,IAAC;QAClC,2EAAU;QAAA,uDAAyC;QAAA,4DAAW;;QAF1D,wHAAmD;QAE7C,0DAAyC;QAAzC,kHAAyC;;;;;;;;;;;;;;;;;;;ACGI;;;;AAMpD,MAAM,aAAa;IACxB,YACkC,IAAwC;QAAxC,SAAI,GAAJ,IAAI,CAAoC;IACtE,CAAC;IAEL,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;gBAC/B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;gBACjB,CAAC,CAAC,iBAAiB,CAAC;YAEtB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO;gBACnC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;gBACnB,CAAC,CAAC,qDAAqD,CAAC;SAC3D;aAAM;YACL,IAAI,CAAC,IAAI,GAAG;gBACV,KAAK,EAAE,iBAAiB;gBACxB,OAAO,EAAE,qDAAqD;aAC/D,CAAC;SACH;IACH,CAAC;;0EApBU,aAAa,kEAEd,qEAAe;2GAFd,aAAa;QCZ1B,yEAA4B;QACL,uDAAe;QAAA,4DAAK;QACzC,qFAAoB;QACf,uDAAiB;QAAA,4DAAI;QAE1B,qFAAoB;QAEiB,iEAAM;QAAA,4DAAS;QAClD,4EAEqB;QAAA,mEAAO;QAAA,4DAAS;;QATlB,0DAAe;QAAf,yGAAe;QAE/B,0DAAiB;QAAjB,2GAAiB;QAIZ,0DAA0B;QAA1B,mFAA0B;QAE1B,0DAAyB;QAAzB,kFAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAL;AAKF;AAE0B;AACC;AACE;AACa;AACT;AACJ;AACE;AACK;AACX;AACE;AACF;AACe;AACb;AACE;AACA;AACW;AACN;AACT;AACM;AACA;;AAkCtD,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GA9BnB,mEAAe;QACf,iEAAa;QACb,uEAAmB;QACnB,mEAAe;QACf,2EAAuB;QACvB,mEAAe;QACf,kEAAgB;QAChB,4DAAU;QACV,kEAAc;QACd,mEAAc;QACd,qEAAe;QACf,kFAAqB;QACrB,yEAAiB;QACjB,qEAAe;QACf,wEAAgB;QAChB,6EAAkB;QAClB,kEAAa;QACb,oEAAc;QACd,kEAAa;QACb,iFAAoB;QACpB,oEAAc;QACd,sEAAe;QACf,sEAAe;QACf,iFAAoB;QACpB,2EAAiB;QACjB,kEAAa;QACb,wEAAgB;QAChB,wEAAgB;mIAGX,cAAc,cA9BnB,mEAAe;QACf,iEAAa;QACb,uEAAmB;QACnB,mEAAe;QACf,2EAAuB;QACvB,mEAAe;QACf,kEAAgB;QAChB,4DAAU;QACV,kEAAc;QACd,mEAAc;QACd,qEAAe;QACf,kFAAqB;QACrB,yEAAiB;QACjB,qEAAe;QACf,wEAAgB;QAChB,6EAAkB;QAClB,kEAAa;QACb,oEAAc;QACd,kEAAa;QACb,iFAAoB;QACpB,oEAAc;QACd,sEAAe;QACf,sEAAe;QACf,iFAAoB;QACpB,2EAAiB;QACjB,kEAAa;QACb,wEAAgB;QAChB,wEAAgB;;;;;;;;;;;;;;;AChEjB,MAAM,YAAY;IAAzB;QACa,SAAI,GAAW,eAAe,CAAC;QAC/B,gBAAW,GAAW,wBAAwB,CAAC;QAExD,YAAO,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1E,CAAC;CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEP+B;AACL;AACG;AACI;;;;;;;;;;;;;;;ACD3B,MAAM,UAAU;IAAvB;QACa,SAAI,GAAW,aAAa,CAAC;QAC7B,gBAAW,GAAW,8BAA8B,CAAC;QAE9D,YAAO,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzE,CAAC;CAAA;;;;;;;;;;;;;;;ACJM,MAAM,cAAc;IACvB,YACW,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAGzB,SAAI,GAAW,iBAAiB,CAAC;QACjC,gBAAW,GAAW,wCAAwC,CAAC;QAExE,YAAO,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CACpD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAC5B,CAAC,gBAAgB,CAAC,CACrB;IARG,CAAC;CASR;;;;;;;;;;;;;;;;;;ACfyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACQJ;;;;;;;;;;;;ICGV,gFACwB;IAAA,uDAAU;IAAA,4DAAa;;;IAAnC,uEAAW;IAAC,0DAAU;IAAV,0EAAU;;ADEvC,MAAM,YAAY;IASrB,YACW,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QATlC,aAAQ,GAAG,IAAI,KAAK,CAChB,IAAI,iDAAY,EAAE,EAClB,IAAI,+CAAU,EAAE,EAChB,IAAI,mDAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CACnC;QAED,YAAO,GAAa,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAMrC,eAAU,GAAG,CAAC,OAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAE3D,YAAO,GAAG,CAAC,EAAY,EAAE,EAAY,EAAE,EAAE,CAAC,GAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,IAAI,OAAK,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,IAAI,EAAC;IAJ5D,CAAC;;wEAXI,YAAY;0GAAZ,YAAY;;QCdzB,6EAEoB;QAChB,+EAC0D;QAC1D,oFACoC;QACrB,kEAAO;QAAA,4DAAY;QAC9B,gFAEyD;QAA7C,kKAAmB,4BAAwB,IAAC;QACpD,sHAC+C;QACnD,4DAAa;QACb,2EAAU;QAAA,uDAAuB;QAAA,4DAAW;QAEhD,oFAA2B;QACZ,iEAAK;QAAA,4DAAY;QAC5B,+EAEsD;QAA/C,iSAAiB,wFAA0B,KAAC;QAFnD,4DAEsD;QACtD,4EAAU;QAAA,iFAAqB;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAAC,kEAAK;QAAA,4DAAW;QAEpE,6EAI6C;QAArC,kRAAS,wFAA0B,KAAC;QAAC,mEAAO;QAAA,4DAAS;;QAnB7C,0DAAiB;QAAjB,8EAAiB;QAGC,0DAAW;QAAX,iFAAW;QAG/B,0DAAuB;QAAvB,wFAAuB;;;;;;;;;;;;;;;;;;ACbM;AAExC,MAAM,iBAAiB,GAAG;IAC7B,wDAAY;CACf,CAAC;AAEK,MAAM,aAAa,GAAY;IAClC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wDAAY,EAAE;CAC/C;;;;;;;;;;;;;;;;;;;;;ACAM,MAAM,SAAS;IACpB,gBACI,CAAC;IAEL,QAAQ;IACR,CAAC;;kEALU,SAAS;uGAAT,SAAS;QCTtB,6EAEoB;QAChB,6EAC4C;QAChD,4DAAU;;;;;;;;;;;;;;;;;ACLmB;;;;;;;;;;;;;;;;;;ACCM;AAKhB;AAEZ,MAAM,eAAe,GAAG;IAC3B,4CAAS;IACT,GAAG,uDAAiB;CACvB;AAEM,MAAM,MAAM,GAAY;IAC3B,GAAG,mDAAa;IAChB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4CAAS,EAAE;IAClC,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;CACpD;;;;;;;;;;;;;;;;;;;;;ACjBkD;AAUrC;AAMU;;AAKjB,MAAM,WAAW;IAHxB;QAIE,eAAU,GAAG,uDAAuD,CAAC;QAErE,qBAAgB,GAAG,GAAgB,EAAE;YACnC,MAAM,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;YAC1C,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC/B,OAAO,OAAO,CAAC;QACjB,CAAC;QAED,mBAAc,GAAG,GAAgB,EAAE;YACjC,MAAM,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;YAC1C,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACzB,OAAO,OAAO,CAAC;QACjB,CAAC;QAED,cAAS,GAAG,CAAC,KAAa,EAAU,EAAE;YACpC,MAAM,KAAK,GAAG,kBAAkB,CAAC;YACjC,IAAI,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;YACvD,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvC,OAAO,QAAQ,CAAC;QAClB,CAAC;QAED,4BAAuB,GAAG,CAAC,KAAiB,EAAsB,EAAE,CAClE,+CAAS,CAAC,KAAK,CAAC,aAAa,EAAE,OAAO,CAAC;aACpC,IAAI,CACH,4DAAY,CAAC,GAAG,CAAC,EACjB,mDAAG,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EACvC,oEAAoB,EAAE,CACvB;KACN;;sEA/BY,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;ACnBW;AACG;AACF;;;;;;;;;;;;;;;;;ACGK;;;AAK9B,MAAM,cAAc;IAGzB,YAAoB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;QAFjC,WAAM,GAAG,IAAI,0EAAiB,EAAE,CAAC;QAOjC,gBAAW,GAAG,CAAC,OAAe,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAM7F,eAAU,GAAG,CAAC,OAAiB,EAAE,EAAE;YACjC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC;QACnC,CAAC;QAED,qBAAgB,GAAG,CAAC,OAAe,EAAE,MAAgB,EAAE,EAAE;YACvD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAED,qBAAgB,GAAG,CAAC,OAAe,EAAE,EAAE;YACrC,IAAI,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAED,uBAAkB,GAAG,CAAC,OAAe,EAAE,EAAE;YACvC,IAAI,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAED,uBAAkB,GAAG,CAAC,OAAe,EAAE,EAAE;YACvC,IAAI,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAjCC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;IAC9B,CAAC;IAID,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAClC,CAAC;;4EAZU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;ACFb,MAAM,YAAY;IAkBvB,YACU,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QAlBnC,YAAO,GAAG,IAAI,CAAC;QAEf,6BAAwB,GAAG,GAAG,EAAE;YAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAChE,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;aAC/D;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBACjE,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aAC9D;QACH,CAAC;QAED,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAClC,CAAC;QAKC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,+BAA+B,CAAC,CAAC,OAAO,CAAC;QAE/F,MAAM,CAAC,UAAU,CAAC,+BAA+B,CAAC;aAC/C,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAsB,EAAE,EAAE,CACrD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CACzB,CAAC;QAEJ,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;;wEA7BU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;ACJpB,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/patterns/app/app.component.ts","./src/patterns/app/app.component.html","./src/patterns/app/app.module.ts","./src/patterns/app/components/core/app-bar.component.ts","./src/patterns/app/components/core/app-bar.component.html","./src/patterns/app/components/core/pattern-header.component.ts","./src/patterns/app/components/core/pattern-header.component.html","./src/patterns/app/components/core/pattern-link.component.ts","./src/patterns/app/components/core/pattern-link.component.html","./src/patterns/app/components/core/theme-toggle.component.ts","./src/patterns/app/components/core/theme-toggle.component.html","./src/patterns/app/dialogs/confirm/confirm.dialog.ts","./src/patterns/app/dialogs/confirm/confirm.dialog.html","./src/patterns/app/material.module.ts","./src/patterns/app/models/command/alert-command.ts","./src/patterns/app/models/command/icommand.ts","./src/patterns/app/models/command/index.ts","./src/patterns/app/models/command/log-command.ts","./src/patterns/app/models/command/snacker.command.ts","./src/patterns/app/models/index.ts","./src/patterns/app/routes/command/command.route.ts","./src/patterns/app/routes/command/command.route.html","./src/patterns/app/routes/command/index.ts","./src/patterns/app/routes/home/home.route.ts","./src/patterns/app/routes/home/home.route.html","./src/patterns/app/routes/home/index.ts","./src/patterns/app/routes/index.ts","./src/patterns/app/services/core.service.ts","./src/patterns/app/services/index.ts","./src/patterns/app/services/snacker.service.ts","./src/patterns/app/services/theme.service.ts","./src/patterns/environments/environment.ts","./src/patterns/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\nimport {\n  ThemeService\n} from './services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    public themer: ThemeService\n  ) { }\n}\n","<section class=\"mat-typography mat-app-background app-frame\"\n         [ngClass]=\"themer.isLight ? 'app-light' : 'app-dark'\">\n    <app-bar>\n        <button mat-menu-item\n                routerLink=\"command\">Command</button>\n    </app-bar>\n    <section class=\"app-container\">\n        <router-outlet></router-outlet>\n    </section>\n</section>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from './material.module';\nimport { AppComponent } from './app.component';\nimport { Components } from './components';\nimport { Dialogs } from './dialogs';\n\nimport {\n  RouteComponents,\n  Routes\n} from './routes';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...Components,\n    ...Dialogs,\n    ...RouteComponents\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MaterialModule,\n    RouterModule.forRoot(Routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-bar',\r\n    templateUrl: 'app-bar.component.html'\r\n})\r\nexport class AppBarComponent {\r\n    @Input() color = 'default';\r\n    @Input() header = 'Game Programming Patterns';\r\n    @Input() headerLink = '/';\r\n    @Input() menuIcon = 'apps';\r\n}\r\n","<mat-toolbar class=\"app-toolbar sticky-top\">\r\n    <span class=\"cursor-pointer\"\r\n          [routerLink]=\"headerLink\">{{header}}</span>\r\n    <span fxFlex></span>\r\n    <theme-toggle></theme-toggle>\r\n    <button mat-icon-button\r\n            [matMenuTriggerFor]=\"routeMenu\">\r\n        <mat-icon>{{menuIcon}}</mat-icon>\r\n    </button>\r\n    <mat-menu #routeMenu=\"matMenu\">\r\n        <ng-content></ng-content>\r\n    </mat-menu>\r\n</mat-toolbar>\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'pattern-header',\r\n    templateUrl: 'pattern-header.component.html'\r\n})\r\nexport class PatternHeaderComponent {\r\n    @Input() link: string = 'https://gameprogrammingpatterns.com';\r\n    @Input() header: string = 'Pattern';\r\n}\r\n","<a class=\"mat-title m4\"\r\n   target=\"_blank\"\r\n   [href]=\"link\">{{header}}</a>\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'pattern-link',\r\n    templateUrl: 'pattern-link.component.html'\r\n})\r\nexport class PatternLinkComponent {\r\n    @Input() label: string = 'Pattern';\r\n    @Input() link: string = '/';\r\n    @Input() width: number = 320;\r\n    @Input() height: number = 72;\r\n    @Input() style: string = 'background-card glow-accent m4 rounded card-outline-accent cursor-pointer';\r\n}\r\n","<section fxLayout=\"column\"\r\n         fxLayoutAlign=\"center center\"\r\n         [class]=\"style\"\r\n         [style.width.px]=\"width\"\r\n         [style.min-height.px]=\"height\"\r\n         [routerLink]=\"link\">\r\n    <p class=\"mat-subheading-2 m4\">{{label}}</p>\r\n</section>\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\nimport { ThemeService } from '../../services';\r\n\r\n@Component({\r\n    selector: 'theme-toggle',\r\n    templateUrl: 'theme-toggle.component.html'\r\n})\r\nexport class ThemeToggleComponent {\r\n    @Input() lightColor: string = 'color-amber';\r\n    @Input() lightIcon: string = 'brightness_5';\r\n    @Input() darkColor: string = 'color-text';\r\n    @Input() darkIcon: string = 'brightness_3';\r\n\r\n    constructor(\r\n        public themer: ThemeService\r\n    ) { }\r\n}\r\n","<button mat-icon-button\r\n        [ngClass]=\"themer.isLight ? lightColor : darkColor\"\r\n        (click)=\"themer.toggleTheme()\">\r\n    <mat-icon>{{themer.isLight ? lightIcon : darkIcon}}</mat-icon>\r\n</button>\r\n","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\n\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'confirm-dialog',\n  templateUrl: 'confirm.dialog.html'\n})\nexport class ConfirmDialog implements OnInit {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string }\n  ) { }\n\n  ngOnInit() {\n    if (this.data) {\n      this.data.title = this.data.title\n        ? this.data.title\n        : 'Confirm Action?';\n\n      this.data.content = this.data.content\n        ? this.data.content\n        : 'Are you sure you would like to perform this action?';\n    } else {\n      this.data = {\n        title: 'Confirm Action?',\n        content: 'Are you sure you would like to perform this action?'\n      };\n    }\n  }\n}\n","<div class=\"mat-typography\">\n  <h2 mat-dialog-title>{{data?.title}}</h2>\n  <mat-dialog-content>\n    <p>{{data?.content}}</p>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <button mat-button\n            [mat-dialog-close]=\"false\">Cancel</button>\n    <button mat-button\n            [mat-dialog-close]=\"true\"\n            color=\"warn\">Confirm</button>\n  </mat-dialog-actions>\n</div>\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n    MatCommonModule,\r\n    MatLineModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatPseudoCheckboxModule,\r\n    MatRippleModule\r\n} from '@angular/material/core';\r\n\r\nimport {\r\n    FlexLayoutModule,\r\n    GridModule\r\n} from '@angular/flex-layout';\r\n\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatCommonModule,\r\n        MatLineModule,\r\n        MatNativeDateModule,\r\n        MatOptionModule,\r\n        MatPseudoCheckboxModule,\r\n        MatRippleModule,\r\n        FlexLayoutModule,\r\n        GridModule,\r\n        DragDropModule,\r\n        MatBadgeModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCheckboxModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatProgressBarModule,\r\n        MatRadioModule,\r\n        MatSelectModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule\r\n    ]\r\n})\r\nexport class MaterialModule { }\r\n","import { ICommand } from './icommand';\r\n\r\nexport class AlertCommand implements ICommand {\r\n    readonly name: string = 'Alert Command';\r\n    readonly description: string = 'Trigger a window alert';\r\n\r\n    execute = (val: string) => window.alert(val ? val : this.description);\r\n}\r\n","export interface ICommand {\r\n    name: string;\r\n    description: string;\r\n    execute: (val: string) => void;\r\n}\r\n","export * from './alert-command';\r\nexport * from './icommand';\r\nexport * from './log-command';\r\nexport * from './snacker.command';\r\n","import { ICommand } from './icommand';\r\n\r\nexport class LogCommand implements ICommand {\r\n    readonly name: string = 'Log Command';\r\n    readonly description: string = 'Log a command to the console';\r\n\r\n    execute = (val: string) => console.log(val ? val : this.description);\r\n}\r\n","import { ICommand } from './icommand';\r\nimport { SnackerService } from '../../services';\r\n\r\nexport class SnackerCommand implements ICommand {\r\n    constructor(\r\n        public snacker: SnackerService\r\n    ) { }\r\n\r\n    readonly name: string = 'Snacker Command';\r\n    readonly description: string = 'Push a message via the Snacker service';\r\n\r\n    execute = (val: string) => this.snacker.sendColorMessage(\r\n        val ? val : this.description,\r\n        ['snacker-indigo']\r\n    )\r\n}\r\n","export * from './command';\r\n","import { Component } from '@angular/core';\r\nimport { SnackerService } from '../../services';\r\n\r\nimport {\r\n    AlertCommand,\r\n    ICommand,\r\n    LogCommand,\r\n    SnackerCommand\r\n} from '../../models';\r\n\r\n@Component({\r\n    selector: 'command-route',\r\n    templateUrl: 'command.route.html'\r\n})\r\nexport class CommandRoute {\r\n    commands = new Array<ICommand>(\r\n        new AlertCommand(),\r\n        new LogCommand(),\r\n        new SnackerCommand(this.snacker)\r\n    )\r\n\r\n    command: ICommand = this.commands[0];\r\n\r\n    constructor(\r\n        public snacker: SnackerService\r\n    ) { }\r\n\r\n    setCommand = (command: ICommand) => this.command = command;\r\n\r\n    compare = (c1: ICommand, c2: ICommand) => c1?.name === c2?.name;\r\n}\r\n","<section fxLayout=\"column\"\r\n         fxLayoutAlign=\"start stretch\"\r\n         class=\"p8\">\r\n    <pattern-header link=\"https://gameprogrammingpatterns.com/command.html\"\r\n                    header=\"Command Pattern\"></pattern-header>\r\n    <mat-form-field class=\"m8\"\r\n                    fxFlexAlign=\"start\">\r\n        <mat-label>Command</mat-label>\r\n        <mat-select [value]=\"command\"\r\n                    [compareWith]=\"compare\"\r\n                    (selectionChange)=\"setCommand($event.value)\">\r\n            <mat-option *ngFor=\"let c of commands\"\r\n                        [value]=\"c\">{{c.name}}</mat-option>\r\n        </mat-select>\r\n        <mat-hint>{{command.description}}</mat-hint>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"m8\">\r\n        <mat-label>Value</mat-label>\r\n        <input matInput\r\n               #val\r\n               (keydown.enter)=\"command.execute(val.value)\" />\r\n        <mat-hint>Press Enter or click <em>Execute</em> below</mat-hint>\r\n    </mat-form-field>\r\n    <button mat-stroked-button\r\n            color=\"primary\"\r\n            class=\"m8\"\r\n            fxFlexAlign=\"start\"\r\n            (click)=\"command.execute(val.value)\">Execute</button>\r\n</section>\r\n","import { Route } from '@angular/router';\r\nimport { CommandRoute } from './command.route';\r\n\r\nexport const CommandComponents = [\r\n    CommandRoute\r\n];\r\n\r\nexport const CommandRoutes: Route[] = [\r\n    { path: 'command', component: CommandRoute }\r\n]\r\n","import {\n  Component,\n  OnInit\n} from '@angular/core';\n\n@Component({\n  selector: 'home-route',\n  templateUrl: 'home.route.html'\n})\nexport class HomeRoute implements OnInit {\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n}\n","<section fxLayout=\"row | wrap\"\n         fxLayoutAlign=\"start start\"\n         class=\"p8\">\n    <pattern-link label=\"Command\"\n                  link=\"command\"></pattern-link>\n</section>\n","export * from './home.route';\n","import { Route } from '@angular/router';\nimport { HomeRoute } from './home';\n\nimport {\n    CommandComponents,\n    CommandRoutes\n} from './command';\n\nexport const RouteComponents = [\n    HomeRoute,\n    ...CommandComponents\n]\n\nexport const Routes: Route[] = [\n    ...CommandRoutes,\n    { path: '', component: HomeRoute },\n    { path: '**', redirectTo: '', pathMatch: 'full' }\n]\n","import { HttpHeaders } from '@angular/common/http';\n\nimport {\n  Injectable,\n  ElementRef\n} from '@angular/core';\n\nimport {\n  fromEvent,\n  Observable\n} from 'rxjs';\n\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreService {\n  ssnPattern = /^(?!(000|666|9))\\d{3}-(?!(00))\\d{2}-(?!(0000))\\d{4}$/g;\n\n  getUploadOptions = (): HttpHeaders => {\n    const headers = new HttpHeaders();\n    headers.set('Accept', 'application/json');\n    headers.delete('Content-Type');\n    return headers;\n  }\n\n  getTextOptions = (): HttpHeaders => {\n    const headers = new HttpHeaders();\n    headers.set('Content-Type', 'text/plain');\n    headers.delete('Pragma');\n    return headers;\n  }\n\n  urlEncode = (value: string): string => {\n    const regex = /[^a-zA-Z0-9-.]/gi;\n    let newValue = value.replace(/\\s/g, '-').toLowerCase();\n    newValue = newValue.replace(regex, '');\n    return newValue;\n  }\n\n  generateInputObservable = (input: ElementRef): Observable<string> =>\n    fromEvent(input.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(300),\n        map((event: any) => event.target.value),\n        distinctUntilChanged()\n      )\n}\n","export * from './core.service';\nexport * from './snacker.service';\nexport * from './theme.service';\n","import { Injectable } from '@angular/core';\n\nimport {\n  MatSnackBar,\n  MatSnackBarConfig\n} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackerService {\n  private config = new MatSnackBarConfig();\n\n  constructor(private snackbar: MatSnackBar) {\n    this.config.duration = 5000;\n    this.config.panelClass = [];\n  }\n\n  private sendMessage = (message: string) => this.snackbar.open(message, 'Close', this.config);\n\n  setDuration(duration: number) {\n    this.config.duration = duration;\n  }\n\n  setClasses = (classes: string[]) => {\n    classes.push('snacker');\n    this.config.panelClass = classes;\n  }\n\n  sendColorMessage = (message: string, colors: string[]) => {\n    this.setClasses(colors);\n    this.sendMessage(message);\n  }\n\n  sendErrorMessage = (message: string) => {\n    this.setClasses(['snacker-red']);\n    this.sendMessage(message);\n  }\n\n  sendWarningMessage = (message: string) => {\n    this.setClasses(['snacker-orange']);\n    this.sendMessage(message);\n  }\n\n  sendSuccessMessage = (message: string) => {\n    this.setClasses(['snacker-green']);\n    this.sendMessage(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OverlayContainer } from '@angular/cdk/overlay';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  isLight = true;\n\n  setOverlayContainerTheme = () => {\n    if (this.isLight) {\n      this.overlay.getContainerElement().classList.remove('app-dark');\n      this.overlay.getContainerElement().classList.add('app-light');\n    } else {\n      this.overlay.getContainerElement().classList.remove('app-light');\n      this.overlay.getContainerElement().classList.add('app-dark');\n    }\n  }\n\n  toggleTheme = () => {\n    this.isLight = !this.isLight;\n    this.setOverlayContainerTheme();\n  }\n\n  constructor(\n    private overlay: OverlayContainer\n  ) {\n    this.isLight = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches;\n\n    window.matchMedia('(prefers-color-scheme: light)')\n      .addEventListener('change', (e: MediaQueryListEvent) =>\n        this.isLight = e.matches\n      );\n\n    this.setOverlayContainerTheme();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}